{"version":3,"sources":["components/NoteContent.js","components/Login.js","components/Home.js","App.js","reportWebVitals.js","reducers/reducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","connect","state","title","selectedNote","content","dispatch","addNote","newNote","type","payload","updateNote","updatedNote","selectNote","clearAllField","props","classes","useState","titleFieldValue","setTitleFieldValue","contentFieldValue","setContentFieldValue","useEffect","className","noValidate","autoComplete","Grid","container","justify","Button","variant","color","disabled","onClick","item","xs","TextField","id","label","value","required","onChange","e","target","multiline","rows","button","startIcon","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","Login","Container","component","maxWidth","CssBaseline","Avatar","Typography","fullWidth","name","autoFocus","FormControlLabel","control","Checkbox","Link","href","Box","mt","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","notes","length","undefined","login","deleteNote","setLogin","isLogin","useTheme","React","open","setOpen","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","direction","Divider","List","map","text","index","ListItem","ListItemIcon","ListItemText","primary","i","stopPropagation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","Array","store","createStore","action","console","log","splice","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.485ff86b.chunk.js","sourcesContent":["import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n        },\r\n    },\r\n}));\r\n\r\nexport function NoteContent(props) {\r\n    const classes = useStyles();\r\n\r\n    const [titleFieldValue, setTitleFieldValue] = useState(props.title);\r\n    const [contentFieldValue, setContentFieldValue] = useState(props.content);\r\n\r\n    useEffect(() => { setTitleFieldValue(props.title) }, [props.title])\r\n    useEffect(() => { setContentFieldValue(props.content) }, [props.content])\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <Grid container >\r\n                <Grid container justify=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"primary\" disabled={!(titleFieldValue && contentFieldValue)} onClick={() => {\r\n                        props.addNote({ title: titleFieldValue, content: contentFieldValue });\r\n                        props.selectNote({ title: titleFieldValue, content: contentFieldValue });\r\n                    }}>\r\n                        Add\r\n                    </Button>\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        value={titleFieldValue}\r\n                        required={true}\r\n                        onChange={(e) => setTitleFieldValue(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"outlined-helperText\"\r\n                        label=\"Body\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={20}\r\n                        required={true}\r\n                        value={contentFieldValue}\r\n                        onChange={(e) => setContentFieldValue(e.target.value)}\r\n\r\n                    />\r\n                </Grid>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={!(titleFieldValue && contentFieldValue)}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={() => {\r\n                            props.updateNote({ title: titleFieldValue, content: contentFieldValue });\r\n                            props.clearAllField()\r\n                        }}\r\n                    >\r\n                        Save\r\n                 </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.selectedNote ? state.selectedNote.title : '',\r\n    content: state.selectedNote ? state.selectedNote.content : ''\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNote: (newNote) => {\r\n            dispatch({ type: \"ADD_NOTE\", payload: newNote })\r\n        },\r\n        updateNote: (updatedNote) => {\r\n            dispatch({ type: \"UPDATE_NOTE\", payload: updatedNote })\r\n        },\r\n        selectNote: (selectedNote) => {\r\n            dispatch({ type: \"SELECT_NOTE\", payload: selectedNote })\r\n        },\r\n        clearAllField: () => {\r\n            dispatch({ type: \"CLEAR_ALL_FIELD\" })\r\n        },\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteContent)\r\n","import React from 'react';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport clsx from 'clsx';\r\nimport {\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport NoteContent from './NoteContent';\r\nimport Login from './Login';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport function Home(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        G Note\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant='h4'>Menu</Typography>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {['LOGIN', 'CREATE NOTES'].map((text, index) => (\r\n                        <ListItem button key={text} onClick={() => {\r\n                            if (text === 'LOGIN') {\r\n                                props.setLogin(true);\r\n                            }\r\n                            else {\r\n                                props.setLogin(false);\r\n                            }\r\n                        }}>\r\n                            <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                {props.notes !== undefined &&\r\n                    <List>\r\n                        {props.notes.map(({ title, content }, i) => (\r\n                            <ListItem button key={i} onClick={() => props.selectNote({ title: title, content: content, index: i })}>\r\n                                <ListItemIcon>{<DeleteIcon onClick={(e) => {\r\n                                    props.deleteNote({ title: title, content: content, index: i });\r\n                                    props.clearAllField();\r\n                                    e.stopPropagation();\r\n                                }} />}</ListItemIcon>\r\n                                <ListItemText primary={title} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                }\r\n\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {props.login ? <Login></Login> : <NoteContent></NoteContent>}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    notes: state.notes.length !== 0 ? state.notes : undefined,\r\n    login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectNote: (selectedNote) => {\r\n            dispatch({ type: \"SELECT_NOTE\", payload: selectedNote })\r\n        },\r\n        deleteNote: (selectedNote) => {\r\n            dispatch({ type: \"DELETE_NOTE\", payload: selectedNote })\r\n        },\r\n        clearAllField: () => {\r\n            dispatch({ type: \"CLEAR_ALL_FIELD\" })\r\n        },\r\n        setLogin: (isLogin) => {\r\n            dispatch({ type: \"SET_LOGIN\", payload: isLogin })\r\n        },\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import Home from './components/Home'\n\nfunction App() {\n  return (\n    <Home></Home>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\r\n    selectedNote: {\r\n        title: '',\r\n        content: '',\r\n        index: undefined\r\n    },\r\n    notes: Array(0),\r\n    login: true,\r\n}\r\n\r\nexport default function reducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case \"SET_LOGIN\":\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case \"ADD_NOTE\":\r\n            console.log(action);\r\n            const newNote = action.payload;\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, newNote]\r\n            }\r\n        case \"DELETE_NOTE\":\r\n            state.notes.splice(action.payload.index, 1)\r\n            console.log(state.notes)\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes]\r\n            }\r\n        case \"UPDATE_NOTE\":\r\n            const newNotes = state.notes;\r\n            newNotes[state.selectedNote.index] = action.payload\r\n            return {\r\n                ...state,\r\n                notes: [...newNotes]\r\n            }\r\n        case \"SELECT_NOTE\":\r\n            if (action.payload.index !== undefined) {\r\n                return {\r\n                    ...state,\r\n                    selectedNote: action.payload\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedNote: {\r\n                    ...action.payload,\r\n                    index: state.notes.length - 1\r\n                }\r\n            }\r\n        case \"CLEAR_ALL_FIELD\":\r\n            return {\r\n                ...state,\r\n                selectedNote: {\r\n                    ...state.selectedNote,\r\n                    title: '',\r\n                    content: '',\r\n                    index: undefined\r\n                }\r\n            }\r\n        default: return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './reducers/reducer';\n\nconst store= createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}